

def topple():
    # Choregraphe bezier export in Python.
    names = list()
    times = list()
    keys = list()

    names.append("LHipYawPitch")
    times.append([1.00000, 2.00000, 3.20000, 3.60000, 4.30000, 5.60000, 6.50000, 7.40000, 8.00000, 8.60000, 10.50000])
    keys.append([[-0.47090, [3, -0.33333, 0.00000], [3, 0.33333, 0.00000]], [0.00000, [3, -0.33333, -0.00643], [3, 0.40000, 0.00771]], [0.00771, [3, -0.40000, 0.00000], [3, 0.13333, 0.00000]], [-0.00000, [3, -0.13333, 0.00771], [3, 0.23333, -0.01350]], [-0.65498, [3, -0.23333, 0.00000], [3, 0.43333, 0.00000]], [-0.49851, [3, -0.43333, 0.00000], [3, 0.30000, 0.00000]], [-0.85900, [3, -0.30000, 0.00000], [3, 0.30000, 0.00000]], [-0.69639, [3, -0.30000, -0.09135], [3, 0.20000, 0.06090]], [-0.40225, [3, -0.20000, 0.00000], [3, 0.20000, 0.00000]], [-0.40225, [3, -0.20000, 0.00000], [3, 0.63333, 0.00000]], [-0.23006, [3, -0.63333, 0.00000], [3, 0.00000, 0.00000]]])

    names.append("LHipRoll")
    times.append([1.00000, 2.00000, 3.20000, 3.60000, 4.30000, 4.80000, 5.60000, 6.50000, 7.40000, 8.00000, 8.60000, 10.50000])
    keys.append([[0.14876, [3, -0.33333, 0.00000], [3, 0.33333, 0.00000]], [0.00000, [3, -0.33333, 0.00000], [3, 0.40000, 0.00000]], [0.02297, [3, -0.40000, 0.00000], [3, 0.13333, 0.00000]], [0.00000, [3, -0.13333, 0.01029], [3, 0.23333, -0.01800]], [-0.06190, [3, -0.23333, 0.00000], [3, 0.16667, 0.00000]], [0.54105, [3, -0.16667, -0.01080], [3, 0.26667, 0.01728]], [0.55833, [3, -0.26667, -0.01089], [3, 0.30000, 0.01225]], [0.61049, [3, -0.30000, -0.01137], [3, 0.30000, 0.01137]], [0.62657, [3, -0.30000, 0.00000], [3, 0.20000, 0.00000]], [0.29671, [3, -0.20000, 0.10152], [3, 0.20000, -0.10152]], [0.01745, [3, -0.20000, 0.00000], [3, 0.63333, 0.00000]], [0.06285, [3, -0.63333, 0.00000], [3, 0.00000, 0.00000]]])

    names.append("LHipPitch")
    times.append([1.00000, 2.00000, 3.20000, 3.60000, 4.30000, 4.80000, 5.60000, 6.50000, 7.40000, 8.00000, 8.60000, 10.50000])
    keys.append([[0.18557, [3, -0.33333, 0.00000], [3, 0.33333, 0.00000]], [-0.17453, [3, -0.33333, 0.00000], [3, 0.40000, 0.00000]], [0.28221, [3, -0.40000, 0.00000], [3, 0.13333, 0.00000]], [-0.17453, [3, -0.13333, 0.17537], [3, 0.23333, -0.30689]], [-1.16456, [3, -0.23333, 0.27150], [3, 0.16667, -0.19393]], [-1.57080, [3, -0.16667, 0.00000], [3, 0.26667, 0.00000]], [-1.52484, [3, -0.26667, 0.00000], [3, 0.30000, 0.00000]], [-1.56012, [3, -0.30000, 0.00000], [3, 0.30000, 0.00000]], [-1.02974, [3, -0.30000, -0.13086], [3, 0.20000, 0.08724]], [-0.90583, [3, -0.20000, 0.00000], [3, 0.20000, 0.00000]], [-0.90583, [3, -0.20000, 0.00000], [3, 0.63333, 0.00000]], [0.20858, [3, -0.63333, 0.00000], [3, 0.00000, 0.00000]]])

    names.append("LKneePitch")
    times.append([1.00000, 2.00000, 3.20000, 3.60000, 4.30000, 4.80000, 5.60000, 6.50000, 7.40000, 8.00000, 8.60000, 10.50000])
    keys.append([[0.19179, [3, -0.33333, 0.00000], [3, 0.33333, 0.00000]], [1.67552, [3, -0.33333, -0.27798], [3, 0.40000, 0.33357]], [2.02645, [3, -0.40000, 0.00000], [3, 0.13333, 0.00000]], [1.67552, [3, -0.13333, 0.11304], [3, 0.23333, -0.19782]], [1.09386, [3, -0.23333, 0.00000], [3, 0.16667, 0.00000]], [1.67552, [3, -0.16667, 0.00000], [3, 0.26667, 0.00000]], [1.22111, [3, -0.26667, 0.09029], [3, 0.30000, -0.10158]], [1.09992, [3, -0.30000, 0.01607], [3, 0.30000, -0.01607]], [1.08385, [3, -0.30000, 0.01607], [3, 0.20000, -0.01071]], [0.87616, [3, -0.20000, 0.00000], [3, 0.20000, 0.00000]], [1.76278, [3, -0.20000, 0.00000], [3, 0.63333, 0.00000]], [-0.07666, [3, -0.63333, 0.00000], [3, 0.00000, 0.00000]]])

    names.append("LAnklePitch")
    times.append([1.00000, 2.00000, 3.20000, 3.60000, 4.30000, 4.80000, 5.60000, 6.50000, 7.40000, 8.00000, 8.60000, 10.50000])
    keys.append([[0.46638, [3, -0.33333, 0.00000], [3, 0.33333, 0.00000]], [0.24435, [3, -0.33333, 0.12737], [3, 0.40000, -0.15284]], [-0.37425, [3, -0.40000, 0.00000], [3, 0.13333, 0.00000]], [0.24435, [3, -0.13333, -0.13232], [3, 0.23333, 0.23156]], [0.71737, [3, -0.23333, 0.00000], [3, 0.16667, 0.00000]], [0.66323, [3, -0.16667, 0.00000], [3, 0.26667, 0.00000]], [0.78545, [3, -0.26667, 0.00000], [3, 0.30000, 0.00000]], [0.78392, [3, -0.30000, 0.00153], [3, 0.30000, -0.00153]], [0.44157, [3, -0.30000, 0.05760], [3, 0.20000, -0.03840]], [0.40317, [3, -0.20000, 0.03840], [3, 0.20000, -0.03840]], [-0.57945, [3, -0.20000, 0.00000], [3, 0.63333, 0.00000]], [0.08134, [3, -0.63333, 0.00000], [3, 0.00000, 0.00000]]])

    names.append("LAnkleRoll")
    times.append([1.00000, 2.00000, 3.20000, 3.60000, 4.30000, 4.80000, 5.60000, 6.50000, 7.40000, 8.00000, 8.60000, 10.50000])
    keys.append([[-0.16725, [3, -0.33333, 0.00000], [3, 0.33333, 0.00000]], [-0.00000, [3, -0.33333, -0.03138], [3, 0.40000, 0.03765]], [0.03984, [3, -0.40000, 0.00000], [3, 0.13333, 0.00000]], [-0.00000, [3, -0.13333, 0.00000], [3, 0.23333, 0.00000]], [0.16084, [3, -0.23333, 0.00000], [3, 0.16667, 0.00000]], [-0.10472, [3, -0.16667, 0.00000], [3, 0.26667, 0.00000]], [-0.00925, [3, -0.26667, -0.03182], [3, 0.30000, 0.03580]], [0.09813, [3, -0.30000, 0.00000], [3, 0.30000, 0.00000]], [-0.44331, [3, -0.30000, 0.15555], [3, 0.20000, -0.10370]], [-0.67960, [3, -0.20000, 0.00000], [3, 0.20000, 0.00000]], [-0.27751, [3, -0.20000, -0.04933], [3, 0.63333, 0.15622]], [-0.06294, [3, -0.63333, 0.00000], [3, 0.00000, 0.00000]]])

    names.append("RHipRoll")
    times.append([1.00000, 2.00000, 3.20000, 3.60000, 4.30000, 4.80000, 5.60000, 6.50000, 7.40000, 8.00000, 8.60000, 10.50000])
    keys.append([[-0.04453, [3, -0.33333, 0.00000], [3, 0.33333, 0.00000]], [-0.00000, [3, -0.33333, 0.00000], [3, 0.40000, 0.00000]], [-0.05833, [3, -0.40000, 0.00000], [3, 0.13333, 0.00000]], [-0.00000, [3, -0.13333, -0.01492], [3, 0.23333, 0.02612]], [0.06478, [3, -0.23333, 0.00000], [3, 0.16667, 0.00000]], [-0.54105, [3, -0.16667, 0.00000], [3, 0.26667, 0.00000]], [-0.15498, [3, -0.26667, -0.11230], [3, 0.30000, 0.12633]], [0.17483, [3, -0.30000, 0.00000], [3, 0.30000, 0.00000]], [-0.00925, [3, -0.30000, 0.07336], [3, 0.20000, -0.04891]], [-0.19199, [3, -0.20000, 0.00000], [3, 0.20000, 0.00000]], [-0.17453, [3, -0.20000, -0.00321], [3, 0.63333, 0.01015]], [-0.15191, [3, -0.63333, 0.00000], [3, 0.00000, 0.00000]]])

    names.append("RHipPitch")
    times.append([1.00000, 2.00000, 3.20000, 3.60000, 4.30000, 4.80000, 5.60000, 6.50000, 7.40000, 8.00000, 8.60000, 10.50000])
    keys.append([[0.25008, [3, -0.33333, 0.00000], [3, 0.33333, 0.00000]], [-0.17453, [3, -0.33333, 0.00000], [3, 0.40000, 0.00000]], [0.37434, [3, -0.40000, 0.00000], [3, 0.13333, 0.00000]], [-0.17453, [3, -0.13333, 0.18817], [3, 0.23333, -0.32930]], [-1.17808, [3, -0.23333, 0.27150], [3, 0.16667, -0.19393]], [-1.57080, [3, -0.16667, 0.00000], [3, 0.26667, 0.00000]], [-0.85746, [3, -0.26667, -0.23750], [3, 0.30000, 0.26719]], [-0.05672, [3, -0.30000, 0.00000], [3, 0.30000, 0.00000]], [-0.45556, [3, -0.30000, 0.15970], [3, 0.20000, -0.10647]], [-0.85521, [3, -0.20000, 0.00000], [3, 0.20000, 0.00000]], [-0.83599, [3, -0.20000, -0.01922], [3, 0.63333, 0.06087]], [0.21327, [3, -0.63333, 0.00000], [3, 0.00000, 0.00000]]])

    names.append("RKneePitch")
    times.append([1.00000, 2.00000, 3.20000, 3.60000, 4.30000, 4.80000, 5.60000, 6.50000, 7.40000, 8.00000, 8.60000, 10.50000])
    keys.append([[0.09200, [3, -0.33333, 0.00000], [3, 0.33333, 0.00000]], [1.67552, [3, -0.33333, -0.28727], [3, 0.40000, 0.34472]], [2.02024, [3, -0.40000, 0.00000], [3, 0.13333, 0.00000]], [1.67552, [3, -0.13333, 0.11424], [3, 0.23333, -0.19992]], [1.07777, [3, -0.23333, 0.00000], [3, 0.16667, 0.00000]], [1.67552, [3, -0.16667, -0.13243], [3, 0.26667, 0.21189]], [2.11075, [3, -0.26667, -0.00135], [3, 0.30000, 0.00152]], [2.11227, [3, -0.30000, -0.00026], [3, 0.30000, 0.00026]], [2.11253, [3, -0.30000, 0.00000], [3, 0.20000, 0.00000]], [2.11253, [3, -0.20000, 0.00000], [3, 0.20000, 0.00000]], [2.11253, [3, -0.20000, 0.00000], [3, 0.63333, 0.00000]], [-0.08901, [3, -0.63333, 0.00000], [3, 0.00000, 0.00000]]])

    names.append("RAnklePitch")
    times.append([1.00000, 2.00000, 3.20000, 3.60000, 4.30000, 4.80000, 5.60000, 6.50000, 7.40000, 8.00000, 8.60000, 10.50000])
    keys.append([[0.82525, [3, -0.33333, 0.00000], [3, 0.33333, 0.00000]], [0.24435, [3, -0.33333, 0.19384], [3, 0.40000, -0.23261]], [-0.45411, [3, -0.40000, 0.00000], [3, 0.13333, 0.00000]], [0.24435, [3, -0.13333, -0.13716], [3, 0.23333, 0.24003]], [0.67748, [3, -0.23333, 0.00000], [3, 0.16667, 0.00000]], [0.66323, [3, -0.16667, 0.01425], [3, 0.26667, -0.02280]], [-0.45564, [3, -0.26667, 0.27681], [3, 0.30000, -0.31141]], [-1.10145, [3, -0.30000, 0.08806], [3, 0.30000, -0.08806]], [-1.18952, [3, -0.30000, 0.00000], [3, 0.20000, 0.00000]], [-1.18952, [3, -0.20000, 0.00000], [3, 0.20000, 0.00000]], [-1.18952, [3, -0.20000, 0.00000], [3, 0.63333, 0.00000]], [0.08126, [3, -0.63333, 0.00000], [3, 0.00000, 0.00000]]])

    names.append("RAnkleRoll")
    times.append([1.00000, 2.00000, 3.20000, 3.60000, 4.30000, 4.80000, 5.60000, 6.50000, 7.40000, 8.00000, 8.60000, 10.50000])
    keys.append([[0.03371, [3, -0.33333, 0.00000], [3, 0.33333, 0.00000]], [0.00000, [3, -0.33333, 0.00000], [3, 0.40000, 0.00000]], [0.03371, [3, -0.40000, 0.00000], [3, 0.13333, 0.00000]], [0.00000, [3, -0.13333, 0.02482], [3, 0.23333, -0.04344]], [-0.17109, [3, -0.23333, 0.00000], [3, 0.16667, 0.00000]], [0.10472, [3, -0.16667, -0.07267], [3, 0.26667, 0.11627]], [0.39573, [3, -0.26667, 0.00000], [3, 0.30000, 0.00000]], [0.09967, [3, -0.30000, 0.07312], [3, 0.30000, -0.07312]], [-0.04299, [3, -0.30000, 0.04355], [3, 0.20000, -0.02904]], [-0.11810, [3, -0.20000, 0.00000], [3, 0.20000, 0.00000]], [-0.08727, [3, -0.20000, -0.02037], [3, 0.63333, 0.06450]], [0.13648, [3, -0.63333, 0.00000], [3, 0.00000, 0.00000]]])

    return names, times, keys